import java.util.*;
public class zooDoors {
    static int numberOfDoors;
    static int rows;
    static Map<Integer,ArrayList<Integer>> map = new HashMap<>();
    static Queue<Integer> queue;
    static boolean[] visited;
    static Set<Integer> key = map.keySet();

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        numberOfDoors = sc.nextInt();
        rows = sc.nextInt();

        //reading data
        for (int i = 1; i <= numberOfDoors; i++) {
            ArrayList<Integer> tempArrayList = new ArrayList<>();
            int first = sc.nextInt();

            for (int j = 0; j < rows ; j++) {
                tempArrayList.add(sc.nextInt());
            }
             map.put(first, tempArrayList);

        }

        while(true){
            int x = sc.nextInt();
            int y = sc.nextInt();
            if (x == 0) return;
            searching(x,y);
        }


    }

    public static boolean searching(int door,int target){
        queue = new LinkedList<>();
        queue.add(door);

        while(!queue.isEmpty()){
            int temp = queue.poll();
            if (temp == target) return true;
            if (key.contains(temp)){
                for (int tempo : map.get(temp)) {
                    queue.add(tempo);
                }
            }
            visited[temp] = true;

        }
        return false;
    }


}
